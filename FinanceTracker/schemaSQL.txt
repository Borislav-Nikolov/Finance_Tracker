CREATE SCHEMA IF NOT EXISTS final_project;

USE final_project;

CREATE TABLE IF NOT EXISTS final_project.users (
	user_id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(45) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    first_name VARCHAR(45),
    last_name VARCHAR(45),
    email VARCHAR(60) NOT NULL UNIQUE,
    is_email_confirmed TINYINT(1) NOT NULL,
    is_subscribed TINYINT(1) NOT NULL,
    is_eligible_for_password_reset TINYINT(1) NOT NULL,
    last_notified TIMESTAMP,
    last_login TIMESTAMP,
    INDEX username_idx (username ASC),
    INDEX email_idx (email ASC)
);

CREATE TABLE IF NOT EXISTS final_project.verification_tokens (
    user_id INT,
    token VARCHAR(255) NOT NULL,
    expiry_date TIMESTAMP NOT NULL,
    is_password_reset TINYINT(1) NOT NULL,
    INDEX user_fk_inx (user_id ASC),
    INDEX token_idx (token ASC),
    CONSTRAINT token_user_fk FOREIGN KEY (user_id)
    REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS final_project.images (
	image_id INT PRIMARY KEY AUTO_INCREMENT,
    uri VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS final_project.categories (
	category_id INT PRIMARY KEY AUTO_INCREMENT,
    category_name VARCHAR(45) NOT NULL,
    is_income TINYINT(1) NOT NULL,
    user_id INT DEFAULT NULL,
    image_id INT NOT NULL,
    INDEX user_fk_idx (user_id ASC),
    INDEX image_fk_idx (image_id ASC),
    CONSTRAINT user_fk FOREIGN KEY (user_id)
    REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT image_fk FOREIGN KEY (image_id)
    REFERENCES images(image_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS final_project.accounts (
	account_id INT PRIMARY KEY AUTO_INCREMENT,
    account_name VARCHAR(45) NOT NULL,
    amount DOUBLE NOT NULL,
    user_id INT NOT NULL,
    INDEX user_fk_idx (user_id ASC) ,
    CONSTRAINT acc_user_fk FOREIGN KEY (user_id)
    REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS final_project.transactions (
	transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    transaction_name VARCHAR(45) NOT NULL,
    amount DOUBLE NOT NULL,
    execution_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    account_id INT NOT NULL,
    category_id INT NOT NULL,
    INDEX acc_fk_idx (account_id ASC),
    INDEX category_fk_idx (category_id ASC),
    INDEX exec_date_idx (execution_date ASC),
    INDEX amount_idx (amount ASC),
    INDEX tran_name_idx (transaction_name ASC),
    CONSTRAINT trans_category_fk FOREIGN KEY (category_id)
    REFERENCES categories(category_id) ON DELETE CASCADE,
    CONSTRAINT trans_account_fk FOREIGN KEY (account_id)
    REFERENCES accounts(account_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS final_project.planned_transactions (
	pt_id INT PRIMARY KEY AUTO_INCREMENT,
    pt_name VARCHAR(45) NOT NULL,
    pt_amount DOUBLE NOT NULL,
    next_execution_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    repeat_period LONG NOT NULL,
    account_id INT NOT NULL,
    category_id INT NOT NULL,
    INDEX acc_fk_idx (account_id ASC),
    INDEX category_fk_idx (category_id ASC),
    INDEX next_exec_date_idx (next_execution_date ASC),
    INDEX pt_amount_idx (pt_amount ASC),
    INDEX pt_name_idx (pt_name ASC),
    CONSTRAINT pt_category_fk FOREIGN KEY (category_id)
    REFERENCES categories(category_id) ON DELETE CASCADE,
    CONSTRAINT pt_account_fk FOREIGN KEY (account_id)
    REFERENCES accounts(account_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS final_project.budgets (
	budget_id INT PRIMARY KEY AUTO_INCREMENT,
    budget_name VARCHAR(45) NOT NULL,
    amount DOUBLE NOT NULL,
    starting_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    end_date TIMESTAMP NOT NULL,
    user_id INT NOT NULL,
    category_id INT NOT NULL,
    INDEX user_fk_idx (user_id ASC),
    CONSTRAINT budget_user_fk FOREIGN KEY (user_id)
    REFERENCES users(user_id) ON DELETE CASCADE,
    INDEX category_fk_idx (category_id ASC) ,
    CONSTRAINT budget_category_fk FOREIGN KEY (category_id)
    REFERENCES categories(category_id) ON DELETE CASCADE
);

INSERT INTO final_project.users(username, password, first_name, last_name, email, is_email_confirmed,
is_subscribed, is_eligible_for_password_reset, last_notified, last_login)
VALUES ("Dragoto", "$2a$13$slnR.YrmveZzo5h4/cB6Ie/jfIqpfL9oR9K.9bpNAGQ11uvdaRlu2", "Dragostin", "Mirchevich",
"dragonmagic@abv.bg", false, true, false, "2019-03-03", "2019-03-04");

INSERT INTO final_project.users(username, password, first_name, last_name, email, is_email_confirmed,
is_subscribed, is_eligible_for_password_reset, last_notified, last_login)
VALUES ("Voxi", "$2a$13$j86GTAUlTLZtCVhiqmsP.Oq2t7gTSI1w/fFxucZbxm93wAPuwNRG6", "Vokila", "Ivanova",
"vokillah@abv.bg", false, true, false, "2019-03-03", "2019-03-04");

INSERT INTO final_project.users(username, password, first_name, last_name, email, is_email_confirmed,
is_subscribed, is_eligible_for_password_reset, last_notified, last_login)
VALUES ("Marchitu", "$2a$13$I1YtLK9D19SwfTeGo1ZqJ./SUTx.VNDlZPmQ5RWoIMYnmshS.eQb.", "Mara", "Popova",
"maraty@abv.bg", false, false, false, "2019-03-03", "2019-03-04");

INSERT INTO final_project.users(username, password, first_name, last_name, email, is_email_confirmed,
is_subscribed, is_eligible_for_password_reset, last_notified, last_login)
VALUES ("Tiran", "$2a$13$duSb8/phb1OLzDBCQOlHfOjbg7pIjIbzGoQjnvpCFbHi.5bdEKrdC", "Titi", "Radulov",
"tiranistraz@abv.bg", false, true, false, "2019-03-03", "2019-03-04");

INSERT INTO final_project.users(username, password, first_name, last_name, email, is_email_confirmed,
 is_subscribed, is_eligible_for_password_reset, last_notified, last_login)
 VALUES ("Velinda", "$2a$13$z/eBtUN5SQBFo7jctbjj7O98BH7J2426Tp8pSM4icjm.LuUzuumy6", "Velka", "Zaskova",
 "vlinzsq@abv.bg", false, true, false, "2019-03-03", "2019-03-04");

 INSERT INTO final_project.users(username, password, first_name, last_name, email, is_email_confirmed,
  is_subscribed, is_eligible_for_password_reset, last_notified, last_login)
  VALUES ("Batko", "$2a$13$iCB9B9ZOjajrAP5mOmOy2uCR3FErOH7fso/fyCrQSeaT7MpLoBMyG", "Bombadil", "Nikolov",
  "b.a.nikolov17@gmail.com", false, false, false, "2019-03-03", "2019-03-04");